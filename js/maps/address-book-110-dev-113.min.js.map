{"version":3,"file":"../address-book-110-dev-113.min.js","sources":["address-book-110-dev-113.js"],"sourcesContent":["/**\n * Checkout steps enhanced features.\n *\n * DEPENDS ON:\n * - jQuery // Interact with WooCommerce events\n */\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t\tdefine([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t\tmodule.exports = factory(root);\n\t} else {\n\t\troot.AddressBook = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar $ = jQuery;\n\n\tvar _hasJQuery = ( $ != null );\n\tvar _hasInitialized = false;\n\tvar _publicMethods = { };\n\tvar _settings = {\n\t\t\n\t\tbodyClass: 'wfc-address-book--active',\n\n\t\taddressBookSelector: '.wfc-address-book',\n\t\taddressBookEntriesWrapper: '.address-book',\n\t\tnewAddressFormSelector: '.wfc-address-book__form-wrapper',\n\t\taddressEntrySelector: '.address-book__entry-radio',\n\t\taddressEntryNewSelector: '[data-address-book-new]',\n\t\taddressEntrySameAsSelector: '[data-address-book-same]',\n\t\taddressFieldsSelector: 'input, select, textarea',\n\t\tpersistAddressFieldsSelector: '#shipping_first_name, #shipping_last_name, #shipping_phone, #shipping_company, #shipping_address_1, #shipping_address_2, #shipping_country, #shipping_state, #shipping_postcode, #shipping_city, #billing_country',\n\t\taddressFieldsCleanSelector: '[name$=\"_address_id\"], #shipping_address_save, #billing_address_save',\n\t\tselectedAddressIdSelector: '[name$=\"_address_id\"]:checked',\n\t\tformRowSelector: '.form-row',\n\t\tselect2Selector: '[class*=\"select2\"]',\n\t\tcopyValueFromFieldSelector: '#billing_first_name, #billing_last_name, #billing_phone',\n\t\tfieldEditedSelector: '[data-field-edited]',\n\t\t\n\t\taddressDataAttribute: 'data-address',\n\t\taddressTypeAttribute: 'data-address-type',\n\t\tsameAsEntryCheckedAttribute: 'data-address-same-as-checked',\n\t\tcopyValueToAttribute: 'data-copy-to-field',\n\t\tfieldEditedAttribute: 'data-field-edited',\n\t\t\n\t\tnewAddressFormActiveClass: 'active',\n\t\tsaveAddressHiddenClass: 'hidden',\n\n\n\t}\n\tvar _updateCheckout = true;\n\tvar _copyValueToFieldSelector =  '';\n\n\n\n\t/**\n\t * METHODS\n\t */\n\n\n\t// TODO: Maybe move to it's own file and load with require bundle\n\t/**\n\t * Debounce\n\t *\n\t * Returns a function, that, as long as it continues to be invoked, will not\n\t * be triggered. The function will be called after it stops being called for\n\t * N milliseconds. If `immediate` is passed, trigger the function on the\n\t * leading edge, instead of the trailing.\n\t */\n\tfunction debounce( func, wait, immediate ) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar context = this, args = arguments;\n\t\t\tvar later = function() {\n\t\t\t\ttimeout = null;\n\t\t\t\tif (!immediate) func.apply(context, args);\n\t\t\t};\n\t\t\tvar callNow = immediate && !timeout;\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(later, wait);\n\t\t\tif (callNow) func.apply(context, args);\n\t\t};\n\t}\n\n\n\n\t/**\n\t * Set or unset the new address form as active\n\t */\n\tvar changeNewAddressFormVisibility = function( addressBook, selectedAddress ) {\n\t\t// Bail if address book or selectedAddresss not available\n\t\tif ( ! addressBook || ! selectedAddress ) { return; }\n\n\t\tvar newAddressForm = addressBook.querySelector( '.wfc-address-book__form-wrapper' );\n\n\t\t// Bail if new address form wrapper not available\n\t\tif ( ! newAddressForm ) { return; }\n\n\t\t// Set new address form state\n\t\tif ( selectedAddress.matches( _settings.addressEntryNewSelector ) ) { newAddressForm.classList.add( _settings.newAddressFormActiveClass ); }\n\t\telse { newAddressForm.classList.remove( _settings.newAddressFormActiveClass ); }\n\t}\n\n\n\n\t/**\n\t * Set or unset the address book as having \"same as\" option selected\n\t */\n\tvar changeSameAsOptionSelectedState = function( addressBook, selectedAddress ) {\n\t\t// Bail if address book or selectedAddress not available\n\t\tif ( ! addressBook || ! selectedAddress ) { return; }\n\n\t\tvar addressBookEntriesWrapper = addressBook.querySelector( _settings.addressBookEntriesWrapper );\n\n\t\t// Bail if new address form wrapper not available\n\t\tif ( ! addressBookEntriesWrapper ) { return; }\n\n\t\t// Set \"same as\" option checked state to address book element\n\t\tif ( selectedAddress.matches( _settings.addressEntrySameAsSelector ) ) { addressBookEntriesWrapper.setAttribute( _settings.sameAsEntryCheckedAttribute, '1' ); }\n\t\telse { addressBookEntriesWrapper.removeAttribute( _settings.sameAsEntryCheckedAttribute ); }\n\t}\n\n\n\n\t/**\n\t * Get address data from saved address option's attribute\n\t */\n\tvar getAddressDataFromAttribute = function( selectedAddress ) {\n\t\tvar addressData = false;\n\n\t\ttry {\n\t\t\tvar addressDataString = selectedAddress.getAttribute( _settings.addressDataAttribute );\n\t\t\taddressData = JSON.parse( addressDataString );\n\t\t\treturn addressData;\n\t\t}\n\t\t// Bail if can't parse address string into JSON object\n\t\tcatch( e ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Get address data from input fields\n\t */\n\tvar getAddressDataFromFields = function( addressBook, selectedAddress ) {\n\t\t// Bail if address book or selected address not valid\n\t\tif ( ! addressBook || ! selectedAddress ) { return false; }\n\n\t\tvar addressData = {};\n\t\tvar addressType = selectedAddress.getAttribute( _settings.addressTypeAttribute );\n\t\tvar fields = addressBook.querySelectorAll( _settings.addressFieldsSelector );\n\n\t\tfor ( var i = 0; i < fields.length; i++ ) {\n\t\t\tvar field = fields[i];\n\t\t\tvar addressFieldName = field.getAttribute( 'name' ).replace( addressType+'_', '' );\n\t\t\taddressData[ addressFieldName ] = field.value;\n\t\t}\n\n\t\treturn addressData;\n\t}\n\n\n\n\t/**\n\t * Update data address attribute to the selected address option\n\t */\n\tvar updateAddressAttribute = function ( addressBook, selectedAddress ) {\n\t\tvar addressData = getAddressDataFromFields( addressBook, selectedAddress );\n\t\tvar addressDataString = JSON.stringify( addressData );\n\t\tselectedAddress.setAttribute( _settings.addressDataAttribute, addressDataString );\n\t}\n\n\n\n\t/**\n\t * Set address field value\n\t */\n\tvar setFieldValue = function( field, value ) {\n\t\t// Bail if field not provided\n\t\tif ( ! field ) { return; }\n\t\t\n\t\t// Sanitize value\n\t\tvalue = value == undefined || value == null ? '' : value;\n\n\t\t// Set field value\n\t\tfield.value = value;\n\n\t\t// Set field value for select2 fields\n\t\tif ( _hasJQuery && field.matches( _settings.select2Selector ) ) {\n\t\t\t$( field ).val( value );\n\t\t\t$( field ).select2().trigger( 'change' );\n\t\t}\n\n\t\t// Clear validation status\n\t\tif ( window.CheckoutValidation ) {\n\t\t\tCheckoutValidation.clearValidationResults( field, field.closest( _settings.formRowSelector ) );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Fill up or clean address form with selected address option\n\t */\n\tvar changeAddressFormFields = function( addressBook, selectedAddress ) {\n\t\t// Bail if checkout update disabled\n\t\tif ( ! _updateCheckout ) return;\n\n\t\t// Bail if selected address not passed\n\t\tif ( ! selectedAddress ) { return; }\n\n\t\tclearAddressFields( addressBook );\n\n\t\tvar addressData = getAddressDataFromAttribute( selectedAddress );\n\n\t\t// Bail if address data not valid\n\t\tif ( ! addressData ) { return; }\n\t\t\n\t\tvar addressType = selectedAddress.getAttribute( _settings.addressTypeAttribute );\n\t\tvar fieldKeys = Object.keys( addressData );\n\n\t\tfor ( var i = 0; i < fieldKeys.length; i++ ) {\n\t\t\tvar key = fieldKeys[i];\n\t\t\tvar fieldkey = addressType+'_'+fieldKeys[i];\n\t\t\tvar field = addressBook.querySelector( '[name=\"'+fieldkey+'\"]' );\n\t\t\tsetFieldValue( field, addressData[ key ] );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Send selected address to server for persisting it's values\n\t */\n\tvar triggerUpdateCheckout = function() {\n\t\t// Bail if checkout update disabled\n\t\tif ( ! _updateCheckout ) return;\n\n\t\t// Update the checkout\n\t\t$( document.body ).trigger( 'update_checkout' );\n\t}\n\n\n\n\n\n\n\n\t/**\n\t * Clear address form fields\n\t */\n\tvar clearAddressFields = function( addressBook ) {\n\t\t// Bail if address book element not passed\n\t\tif ( ! addressBook ) { return; }\n\n\t\t_updateCheckout = false;\n\n\t\tvar fields = addressBook.querySelectorAll( _settings.addressFieldsSelector );\n\t\tfor ( var i = 0; i < fields.length; i++ ) {\n\t\t\tvar field = fields[i];\n\t\t\t\n\t\t\t// Skip address id fields\n\t\t\tif ( ! field.matches( _settings.addressFieldsCleanSelector ) ) {\n\t\t\t\tsetFieldValue( field, '' );\n\t\t\t}\n\t\t}\n\t\t\n\t\t_updateCheckout = true;\n\t}\n\n\n\n\t/**\n\t * Handle change to selected address option\n\t */\n\tvar changeSelectedAddress = function ( target ) {\n\t\tvar addressBook = target.closest( _settings.addressBookSelector );\n\t\tchangeNewAddressFormVisibility( addressBook, target );\n\t\tchangeSameAsOptionSelectedState( addressBook, target );\n\t\tchangeAddressFormFields( addressBook, target );\n\t\ttriggerUpdateCheckout();\n\t}\n\n\n\n\t/**\n\t * Handle change to persisted address fields\n\t */\n\tvar changePersistedAddressFields = function( e ) {\n\t\t// Bail if checkout update disabled\n\t\tif ( ! _updateCheckout ) return;\n\t\t\n\t\tvar target = e.target;\n\t\tvar addressBook = target.closest( _settings.addressBookSelector );\n\t\tvar selectedAddress = addressBook.querySelector( _settings.selectedAddressIdSelector );\n\n\t\tif ( selectedAddress && selectedAddress.matches( _settings.addressEntryNewSelector ) ) {\n\t\t\tupdateAddressAttribute( addressBook, selectedAddress );\n\t\t\ttriggerUpdateCheckout();\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Prepare selector of target field of \"copy to\" function based origin field attributes\n\t */\n\tvar prepareCopyValueToFieldsSelector = function() {\n\t\tvar copyFromFields = document.querySelectorAll( _settings.copyValueFromFieldSelector );\n\n\t\t\n\t\tfor ( var index = 0; index < copyFromFields.length; index++) {\n\t\t\tvar field = copyFromFields[ index ];\n\t\t\tvar copyToSelector = field.getAttribute( _settings.copyValueToAttribute );\n\t\t\t\n\t\t\tif ( _copyValueToFieldSelector.indexOf( copyToSelector ) == -1 ) {\n\t\t\t\t_copyValueToFieldSelector += _copyValueToFieldSelector.length > 0 ? ', ' : '';\n\t\t\t\t_copyValueToFieldSelector += copyToSelector;\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Copy value from one field to a target field defined as an attribute\n\t */\n\tvar copyFieldValue = function( changedField ) {\n\t\tvar copyToSelector = changedField.getAttribute( _settings.copyValueToAttribute );\n\t\t\n\t\t// Bail if selector to copy to other fields is empty\n\t\tif ( ! copyToSelector || copyToSelector == '' ) { return; }\n\n\t\tvar targetFields = document.querySelectorAll( copyToSelector );\n\n\t\tfor ( var index = 0; index < targetFields.length; index++ ) {\n\t\t\tvar field = targetFields[ index ];\n\t\t\tif ( ! field.matches( _settings.fieldEditedSelector ) ) {\n\t\t\t\tfield.value = changedField.value;\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Mark a field as edited by the user\n\t */\n\tvar markFieldAsEdited = function( field ) {\n\t\t// Bail if field not valid\n\t\tif ( ! field ) { return; }\n\n\t\tfield.setAttribute( _settings.fieldEditedAttribute, '1' );\n\t}\n\t\n\n\n\t/**\n\t * Handle captured `change` event and route to the appropriate function.\n\t */\n\tvar handleChange = function( e ) {\n\t\tif ( e.target.matches( _settings.addressEntrySelector ) ) {\n\t\t\tchangeSelectedAddress( e.target );\n\t\t}\n\t\telse if ( e.target.matches( _settings.copyValueFromFieldSelector ) ) {\n\t\t\tcopyFieldValue( e.target );\n\t\t}\n\t\telse if ( e.target.matches( _copyValueToFieldSelector ) ) {\n\t\t\tmarkFieldAsEdited( e.target );\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Handle change to persisted address fields\n\t */\n\tvar initEventHandlers = function( e ) {\n\t\twindow.addEventListener( 'change', handleChange );\n\n\t\t$( document.body ).on( 'updated_checkout', initAddressFieldsEventHandlers );\n\t\tinitAddressFieldsEventHandlers();\n\t}\n\t\n\t/**\n\t * Add event handler to persisted address fields\n\t */\n\tvar initAddressFieldsEventHandlers = function() {\n\t\tif ( _hasJQuery ) {\n\t\t\t// Need to use jQuery event handler as select2 doesn't fire change event for the underlying select field\n\t\t\t// var debouncedChangeHandler = debounce( changePersistedAddressFields, 500 );\n\t\t\t// $( _settings.persistAddressFieldsSelector ).off( 'change', debouncedChangeHandler );\n\t\t\t// $( _settings.persistAddressFieldsSelector ).on( 'change', debouncedChangeHandler );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Initialize component and set related handlers.\n\t */\n\t_publicMethods.init = function() {\n\t\tif ( _hasInitialized ) return;\n\t\t\n\t\tinitEventHandlers();\n\t\tprepareCopyValueToFieldsSelector();\n\n\t\t// Add init class\n\t\tdocument.body.classList.add( _settings.bodyClass );\n\n\t\t_hasInitialized = true;\n\t};\n\n\n\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","AddressBook","global","this","window","$","jQuery","_hasJQuery","_hasInitialized","_publicMethods","_settings","_updateCheckout","_copyValueToFieldSelector","setFieldValue","field","value","undefined","matches","val","select2","trigger","CheckoutValidation","clearValidationResults","closest","changeAddressFormFields","addressBook","selectedAddress","clearAddressFields","addressData","addressDataString","getAttribute","JSON","parse","e","getAddressDataFromAttribute","addressType","fieldKeys","Object","keys","i","length","key","fieldkey","querySelector","triggerUpdateCheckout","document","body","changeSelectedAddress","target","newAddressForm","addressBookEntriesWrapper","classList","add","remove","setAttribute","removeAttribute","handleChange","changedField","copyToSelector","targetFields","querySelectorAll","index","copyFieldValue","fields","initAddressFieldsEventHandlers","init","addEventListener","on","copyFromFields","indexOf","prepareCopyValueToFieldsSelector"],"mappings":"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"}