{"version":3,"file":"../checkout-steps-120-dev-1.min.js","sources":["checkout-steps-120-dev-1.js"],"sourcesContent":["/**\n * Manage checkout steps state.\n *\n * DEPENDS ON:\n * - jQuery // Interact with WooCommerce events\n */\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t\tdefine([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t\tmodule.exports = factory(root);\n\t} else {\n\t\troot.CheckoutSteps = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar $ = jQuery;\n\tvar _hasJQuery = ( $ != null );\n\n\tvar _hasInitialized = false;\n\tvar _publicMethods = { };\n\tvar _settings = {\n\t\tbodyClass: 'has-wfc-checkout-steps',\n\t\tbodyClassActiveStepPattern: 'wfc-checkout-step--active-{ID}',\n\t\t\n\t\tstepSelector: '.wfc-checkout-step',\n\t\tnextStepSelector: '[data-step-current] ~ .wfc-checkout-step',\n\t\tnextStepButtonSelector: '[data-step-next]',\n\t\tstepCompleteAttribute: 'data-step-complete',\n\t\tstepCurrentAttribute: 'data-step-current',\n\n\t\tsubstepSelector: '.wfc-step__substep',\n\t\tsubstepTextContentSelector: '.wfc-step__substep-text-content',\n\t\tsubstepFieldsSelector: '.wfc-step__substep-fields',\n\t\tsubstepTextSelector: '.wfc-step__substep-text',\n\t\tsubstepEditButtonSelector: '[data-step-edit]',\n\t\tsubstepSaveButtonSelector: '[data-step-save]',\n\t\t\n\t\tisEditingClass: 'is-editing',\n\t\tisLoadingClass: 'is-loading',\n\n\t\tinvalidFieldRowSelector: '.woocommerce-invalid .input-text, .woocommerce-invalid select',\n\t}\n\n\n\n\t/**\n\t * METHODS\n\t */\n\n\n\n\t/*!\n\t* Merge two or more objects together.\n\t* (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\n\t* @param   {Boolean}  deep     If true, do a deep (or recursive) merge [optional]\n\t* @param   {Object}   objects  The objects to merge together\n\t* @returns {Object}            Merged values of defaults and options\n\t*/\n\tvar extend = function () {\n\t\t// Variables\n\t\tvar extended = {};\n\t\tvar deep = false;\n\t\tvar i = 0;\n\n\t\t// Check if a deep merge\n\t\tif ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\n\t\t\tdeep = arguments[0];\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge the object into the extended object\n\t\tvar merge = function (obj) {\n\t\t\tfor (var prop in obj) {\n\t\t\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\t\t\t// If property is an object, merge properties\n\t\t\t\t\tif (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n\t\t\t\t\t\textended[prop] = extend(extended[prop], obj[prop]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textended[prop] = obj[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop through each object and conduct a merge\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar obj = arguments[i];\n\t\t\tmerge(obj);\n\t\t}\n\n\t\treturn extended;\n    };\n\n\n\n\n\t/**\n\t * Expand the substep fields for edition, and collapse the substep values in text format.\n\t *\n\t * @param   HTMLElement  substepElement  Substep element to change the state of.\n\t */\n\tvar expandSubstepEdit = function( substepElement ) {\n\t\t// Bail if editButton not valid\n\t\tif ( ! substepElement ) { return; }\n\n\t\tvar substepFieldsElement = substepElement.querySelector( _settings.substepFieldsSelector );\n\t\tvar substepTextElement = substepElement.querySelector( _settings.substepTextSelector );\n\n\t\t// Change expanded/collapsed states for the fields and text blocks\n\t\tCollapsibleBlock.expand( substepFieldsElement );\n\t\tCollapsibleBlock.collapse( substepTextElement );\n\n\t\t// Add editing class to the substep element\n\t\tsubstepElement.classList.add( _settings.isEditingClass );\n\t}\n\n\t/**\n\t * Collapse the substep fields, and expand the substep values in text format for review.\n\t *\n\t * @param   HTMLElement  substepElement  Substep element to change the state of.\n\t */\n\tvar collapseSubstepEdit = function( substepElement ) {\n\t\t// Bail if editButton not valid\n\t\tif ( ! substepElement ) { return; }\n\n\t\tvar substepFieldsElement = substepElement.querySelector( _settings.substepFieldsSelector );\n\t\tvar substepTextElement = substepElement.querySelector( _settings.substepTextSelector );\n\n\t\t// Change expanded/collapsed states for the fields and text blocks\n\t\tCollapsibleBlock.collapse( substepFieldsElement );\n\t\tCollapsibleBlock.expand( substepTextElement );\n\n\t\t// Remove editing class from the substep element\n\t\tsubstepElement.classList.remove( _settings.isEditingClass );\n\t}\n\n\n\n\t/**\n\t * Use the same method that WooCommerce uses to block other parts of the checkout form while updating.\n\t * The UI is unblocked by the WooCommerce `checkout.js` script (which is replaced with a modified version but keeps the same behavior)\n\t * using the checkout fragment selector, then unblocking after the checkout update is completed.\n\t *\n\t * @param   HTMLElement  element  Element to block the UI and show the loading indicator.\n\t */\n\tvar blockUI = function( element ) {\n\t\tif ( _hasJQuery ) {\n\t\t\t$( element ).block({\n\t\t\t\tmessage: null,\n\t\t\t\toverlayCSS: {\n\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\topacity: 0.6\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Collapse the substep fields, and expand the substep values in text format for review.\n\t *\n\t * @param   HTMLElement  substepElement  Substep element to change the state of.\n\t */\n\t var maybeSaveSubstep = function( substepElement ) {\n\t\t// Bail if editButton not valid\n\t\tif ( ! substepElement ) { return; }\n\t\t\n\t\t// Maybe validate fields\n\t\tif ( window.CheckoutValidation && ! CheckoutValidation.validateAllFields( substepElement ) ) {\n\t\t\t// Try to focus the first invalid field\n\t\t\tvar firstInvalidField = substepElement.querySelector( _settings.invalidFieldRowSelector );\n\t\t\tif ( firstInvalidField ) {\n\t\t\t\tfirstInvalidField.focus();\n\t\t\t}\n\t\t\t\n\t\t\t// Bail when substep has invalid fields\n\t\t\treturn;\n\t\t}\n\n\t\t// Collapse substep fields and display step in text format\n\t\tcollapseSubstepEdit( substepElement );\n\n\t\t// Update checkout\n\t\tif ( _hasJQuery ) {\n\t\t\t// Get text content element, then block IU\n\t\t\tvar contentElement = substepElement.querySelector( _settings.substepTextContentSelector );\n\t\t\tblockUI( contentElement );\n\n\t\t\t// Trigger update checkout\n\t\t\t$( document.body ).trigger( 'update_checkout' );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Collapse the substep fields, and expand the substep values in text format for review.\n\t *\n\t * @param   HTMLElement  substepElement  Substep element to change the state of.\n\t */\n\tvar maybeProceedNextStep = function( stepElement ) {\n\t\t// Bail if editButton not valid\n\t\tif ( ! stepElement ) { return; }\n\t\t\n\t\t// Maybe validate fields\n\t\tif ( window.CheckoutValidation && ! CheckoutValidation.validateAllFields( stepElement ) ) {\n\t\t\t// Try to focus the first invalid field\n\t\t\tvar firstInvalidField = stepElement.querySelector( _settings.invalidFieldRowSelector );\n\t\t\tif ( firstInvalidField ) {\n\t\t\t\tfirstInvalidField.focus();\n\t\t\t}\n\t\t\t\n\t\t\t// Bail when any substep has invalid fields\n\t\t\treturn;\n\t\t}\n\n\t\t// Set current step as complete\n\t\tstepElement.setAttribute( _settings.stepCompleteAttribute, '' );\n\n\t\t// TODO: Use collapsible block to collapse/expand steps\n\n\t\t// Collapse substeps fields and display step in text format\n\t\tvar substepElements = stepElement.querySelectorAll( _settings.substepSelector );\n\t\tfor ( var i = 0; i < substepElements.length; i++ ) {\n\t\t\tvar substepElement = substepElements[i];\n\t\t\t\n\t\t\t// Get text content element, then block IU\n\t\t\tvar contentElement = substepElement.querySelector( _settings.substepTextContentSelector );\n\t\t\tif ( contentElement ) {\n\t\t\t\tcontentElement.classList.add( _settings.isLoadingClass );\n\t\t\t\tblockUI( contentElement );\n\t\t\t}\n\n\t\t\t// Collapse substep\n\t\t\tcollapseSubstepEdit( substepElement );\n\t\t}\n\n\t\t// Get next step, and set it as current\n\t\tvar nextStepElement = stepElement.parentElement.querySelector( _settings.nextStepSelector );\n\t\tnextStepElement.setAttribute( _settings.stepCurrentAttribute, '' );\n\t\t\n\t\t// Unset `current` from the step that is closing\n\t\tstepElement.removeAttribute( _settings.stepCurrentAttribute );\n\n\t\t// TODO: Use collapsible block to collapse/expand steps\n\n\t\t// Trigger update checkout\n\t\tif ( _hasJQuery ) {\n\t\t\t$( document.body ).trigger( 'update_checkout' );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Handle document clicks and route to the appropriate function.\n\t */\n\tvar handleClick = function( e ) {\n\t\t// NEXT STEP\n\t\tif ( e.target.closest( _settings.nextStepButtonSelector ) ) {\n\t\t\tvar step = e.target.closest( _settings.stepSelector );\n\t\t\tmaybeProceedNextStep( step );\n\t\t}\n\t\t// EDIT SUBSTEP\n\t\telse if ( e.target.closest( _settings.substepEditButtonSelector ) ) {\n\t\t\tvar substepElement = e.target.closest( _settings.substepSelector );\n\t\t\texpandSubstepEdit( substepElement );\n\t\t}\n\t\t// SAVE SUBSTEP\n\t\telse if ( e.target.closest( _settings.substepSaveButtonSelector ) ) {\n\t\t\tvar substepElement = e.target.closest( _settings.substepSelector );\n\t\t\tmaybeSaveSubstep( substepElement );\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Finish to initialize component and set related handlers.\n\t */\n\t var finishInit = function() {\n\t\t// Add event listeners\n\t\twindow.addEventListener( 'click', handleClick );\n\n\t\t// Add init class\n\t\tdocument.body.classList.add( _settings.bodyClass );\n\n\t\t_hasInitialized = true;\n\t}\n\n\n\n\t/**\n\t * Initialize component and set related handlers.\n\t */\n\t_publicMethods.init = function( options ) {\n\t\tif ( _hasInitialized ) return;\n\n\t\t// Merge settings\n\t\t_settings = extend( _settings, options );\n\n\t\t// Finish initialization, maybe load dependencies first\n\t\tif ( window.CollapsibleBlock ) {\n\t\t\tfinishInit();\n\t\t}\n\t\telse if( window.RequireBundle ) {\n\t\t\tRequireBundle.require( [ 'collapsible-block' ], function() { finishInit(); } );\n\t\t}\n\t};\n\n\n\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","CheckoutSteps","global","this","window","collapseSubstepEdit","substepElement","substepFieldsElement","substepTextElement","querySelector","_settings","substepFieldsSelector","substepTextSelector","CollapsibleBlock","collapse","expand","classList","remove","isEditingClass","blockUI","element","_hasJQuery","$","block","message","overlayCSS","background","opacity","handleClick","e","contentElement","target","closest","nextStepButtonSelector","stepElement","CheckoutValidation","validateAllFields","setAttribute","stepCompleteAttribute","substepElements","querySelectorAll","substepSelector","i","length","substepTextContentSelector","add","isLoadingClass","parentElement","nextStepSelector","stepCurrentAttribute","removeAttribute","document","body","trigger","firstInvalidField","invalidFieldRowSelector","focus","maybeProceedNextStep","stepSelector","substepEditButtonSelector","substepSaveButtonSelector","finishInit","addEventListener","bodyClass","_hasInitialized","jQuery","_publicMethods","bodyClassActiveStepPattern","extend","extended","deep","Object","prototype","toString","call","arguments","obj","prop","hasOwnProperty","merge","init","options","RequireBundle","require"],"mappings":"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"}