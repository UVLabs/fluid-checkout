{"version":3,"file":"../address-book-110-dev-61.min.js","sources":["address-book-110-dev-61.js"],"sourcesContent":["/**\n * Checkout steps enhanced features.\n *\n * DEPENDS ON:\n * - jQuery // Interact with WooCommerce events\n */\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t\tdefine([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t\tmodule.exports = factory(root);\n\t} else {\n\t\troot.AddressBook = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar $ = jQuery;\n\n\tvar _hasJQuery = ( $ != null );\n\tvar _hasInitialized = false;\n\tvar _publicMethods = { };\n\tvar _settings = {\n\t\t\n\t\tbodyClass: 'wfc-address-book--active',\n\n\t\taddressBookSelector: '.wfc-address-book',\n\t\taddressBookEntriesWrapper: '.address-book',\n\t\tnewAddressFormSelector: '.wfc-address-book__form-wrapper',\n\t\taddressEntrySelector: '.address-book__entry-radio',\n\t\taddressEntryNewSelector: '[data-address-book-new]',\n\t\taddressEntrySameAsSelector: '[data-address-book-same]',\n\t\taddressFieldsSelector: 'input, select, textarea',\n\t\tpersistAddressFieldsSelector: '#shipping_first_name, #shipping_last_name, #shipping_phone, #shipping_company, #shipping_address_1, #shipping_address_2, #shipping_country, #shipping_state, #shipping_postcode, #shipping_city, #billing_address_1, #billing_address_2, #billing_country, #billing_state, #billing_postcode, #billing_city, #billing_company',\n\t\taddressFieldsCleanSelector: '[name$=\"_address_id\"], #shipping_address_save, #billing_address_save',\n\t\tselectedAddressIdSelector: '[name$=\"_address_id\"]:checked',\n\t\tformRowSelector: '.form-row',\n\t\tselect2Selector: '[class*=\"select2\"]',\n\t\tcopyValueFromFieldSelector: '#billing_first_name, #billing_last_name, #billing_phone',\n\t\tfieldEditedSelector: '[data-field-edited]',\n\t\t\n\t\taddressDataAttribute: 'data-address',\n\t\taddressTypeAttribute: 'data-address-type',\n\t\tsameAsEntryCheckedAttribute: 'data-address-same-as-checked',\n\t\tcopyValueToAttribute: 'data-copy-to-field',\n\t\tfieldEditedAttribute: 'data-field-edited',\n\t\t\n\t\tnewAddressFormActiveClass: 'active',\n\t\tsaveAddressHiddenClass: 'hidden',\n\n\n\t}\n\tvar _updateCheckout = true;\n\tvar _copyValueToFieldSelector =  '';\n\n\n\n\t/**\n\t * METHODS\n\t */\n\n\n\t// TODO: Maybe move to it's own file and load with require bundle\n\t/**\n\t * Debounce\n\t *\n\t * Returns a function, that, as long as it continues to be invoked, will not\n\t * be triggered. The function will be called after it stops being called for\n\t * N milliseconds. If `immediate` is passed, trigger the function on the\n\t * leading edge, instead of the trailing.\n\t */\n\tfunction debounce( func, wait, immediate ) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar context = this, args = arguments;\n\t\t\tvar later = function() {\n\t\t\t\ttimeout = null;\n\t\t\t\tif (!immediate) func.apply(context, args);\n\t\t\t};\n\t\t\tvar callNow = immediate && !timeout;\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(later, wait);\n\t\t\tif (callNow) func.apply(context, args);\n\t\t};\n\t}\n\n\n\n\t/**\n\t * Set or unset the new address form as active\n\t */\n\tvar changeNewAddressFormVisibility = function( addressBook, selectedAddress ) {\n\t\t// Bail if address book or selectedAddresss not available\n\t\tif ( ! addressBook || ! selectedAddress ) { return; }\n\n\t\tvar newAddressForm = addressBook.querySelector( '.wfc-address-book__form-wrapper' );\n\n\t\t// Bail if new address form wrapper not available\n\t\tif ( ! newAddressForm ) { return; }\n\n\t\t// Set new address form state\n\t\tif ( selectedAddress.matches( _settings.addressEntryNewSelector ) ) { newAddressForm.classList.add( _settings.newAddressFormActiveClass ); }\n\t\telse { newAddressForm.classList.remove( _settings.newAddressFormActiveClass ); }\n\t}\n\n\n\n\t/**\n\t * Set or unset the address book as having \"same as\" option selected\n\t */\n\tvar changeSameAsOptionSelectedState = function( addressBook, selectedAddress ) {\n\t\t// Bail if address book or selectedAddress not available\n\t\tif ( ! addressBook || ! selectedAddress ) { return; }\n\n\t\tvar addressBookEntriesWrapper = addressBook.querySelector( _settings.addressBookEntriesWrapper );\n\n\t\t// Bail if new address form wrapper not available\n\t\tif ( ! addressBookEntriesWrapper ) { return; }\n\n\t\t// console.log( selectedAddress.matches( _settings.addressEntrySameAsSelector ) );\n\n\t\t// Set \"same as\" option checked state to address book element\n\t\tif ( selectedAddress.matches( _settings.addressEntrySameAsSelector ) ) { addressBookEntriesWrapper.setAttribute( _settings.sameAsEntryCheckedAttribute, '1' ); }\n\t\telse { addressBookEntriesWrapper.removeAttribute( _settings.sameAsEntryCheckedAttribute ); }\n\t}\n\n\n\n\t/**\n\t * Get address data from saved address option's attribute\n\t */\n\tvar getAddressDataFromAttribute = function( selectedAddress ) {\n\t\tvar addressData = false;\n\n\t\ttry {\n\t\t\tvar addressDataString = selectedAddress.getAttribute( _settings.addressDataAttribute );\n\t\t\taddressData = JSON.parse( addressDataString );\n\t\t\treturn addressData;\n\t\t}\n\t\t// Bail if can't parse address string into JSON object\n\t\tcatch( e ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Get address data from input fields\n\t */\n\tvar getAddressDataFromFields = function( addressBook, selectedAddress ) {\n\t\t// Bail if address book or selected address not valid\n\t\tif ( ! addressBook || ! selectedAddress ) { return false; }\n\n\t\tvar addressData = {};\n\t\tvar addressType = selectedAddress.getAttribute( _settings.addressTypeAttribute );\n\t\tvar fields = addressBook.querySelectorAll( _settings.addressFieldsSelector );\n\n\t\tfor ( var i = 0; i < fields.length; i++ ) {\n\t\t\tvar field = fields[i];\n\t\t\tvar addressFieldName = field.getAttribute( 'name' ).replace( addressType+'_', '' );\n\t\t\taddressData[ addressFieldName ] = field.value;\n\t\t}\n\n\t\treturn addressData;\n\t}\n\n\n\n\t/**\n\t * Update data address attribute to the selected address option\n\t */\n\tvar updateAddressAttribute = function ( addressBook, selectedAddress ) {\n\t\tvar addressData = getAddressDataFromFields( addressBook, selectedAddress );\n\t\tvar addressDataString = JSON.stringify( addressData );\n\t\tselectedAddress.setAttribute( _settings.addressDataAttribute, addressDataString );\n\t}\n\n\n\n\t/**\n\t * Set address field value\n\t */\n\tvar setFieldValue = function( field, value ) {\n\t\t// Bail if field not provided\n\t\tif ( ! field ) { return; }\n\t\t\n\t\t// Sanitize value\n\t\tvalue = value == undefined || value == null ? '' : value;\n\n\t\t// Set field value\n\t\tfield.value = value;\n\n\t\t// Set field value for select2 fields\n\t\tif ( _hasJQuery && field.matches( _settings.select2Selector ) ) {\n\t\t\t$( field ).val( value );\n\t\t\t$( field ).select2().trigger( 'change' );\n\t\t}\n\n\t\t// Clear validation status\n\t\tif ( window.CheckoutValidation ) {\n\t\t\tCheckoutValidation.clearValidationResults( field, field.closest( _settings.formRowSelector ) );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Fill up or clean address form with selected address option\n\t */\n\tvar changeAddressFormFields = function( addressBook, selectedAddress ) {\n\t\t// Bail if checkout update disabled\n\t\tif ( ! _updateCheckout ) return;\n\n\t\t// Bail if selected address not passed\n\t\tif ( ! selectedAddress ) { return; }\n\n\t\tclearAddressFields( addressBook );\n\n\t\tvar addressData = getAddressDataFromAttribute( selectedAddress );\n\n\t\t// Bail if address data not valid\n\t\tif ( ! addressData ) { return; }\n\t\t\n\t\tvar addressType = selectedAddress.getAttribute( _settings.addressTypeAttribute );\n\t\tvar fieldKeys = Object.keys( addressData );\n\n\t\tfor ( var i = 0; i < fieldKeys.length; i++ ) {\n\t\t\tvar key = fieldKeys[i];\n\t\t\tvar fieldkey = addressType+'_'+fieldKeys[i];\n\t\t\tvar field = addressBook.querySelector( '[name=\"'+fieldkey+'\"]' );\n\t\t\tsetFieldValue( field, addressData[ key ] );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Send selected address to server for persisting it's values\n\t */\n\tvar updatePersistedAddress = function( addressBook, selectedAddress ) {\n\t\t// Bail if checkout update disabled\n\t\tif ( ! _updateCheckout ) return;\n\n\t\tvar addressType = selectedAddress.getAttribute( _settings.addressTypeAttribute );\n\t\tvar addressData = getAddressDataFromAttribute( selectedAddress );\n\n\t\t// Update delivery date on server, then update checkout page\n\t\tjQuery.ajax({\n\t\t\ttype: 'POST',\n\t\t\turl: wc_checkout_params.ajax_url,\n\t\t\tdata: {\n\t\t\t\taction: 'wfc_set_'+addressType+'_address_selected_session',\n\t\t\t\taddress_data: addressData\n\t\t\t},\n\t\t\tcomplete: function(response) {\n\t\t\t\t// Update the checkout\n\t\t\t\t$( document.body ).trigger( 'update_checkout' );\n\t\t\t},\n\t\t\tdataType: 'html'\n\t\t});\n\t}\n\n\n\n\n\n\n\n\t/**\n\t * Clear address form fields\n\t */\n\tvar clearAddressFields = function( addressBook ) {\n\t\t// Bail if address book element not passed\n\t\tif ( ! addressBook ) { return; }\n\n\t\t_updateCheckout = false;\n\n\t\tvar fields = addressBook.querySelectorAll( _settings.addressFieldsSelector );\n\t\tfor ( var i = 0; i < fields.length; i++ ) {\n\t\t\tvar field = fields[i];\n\t\t\t\n\t\t\t// Skip address id fields\n\t\t\tif ( ! field.matches( _settings.addressFieldsCleanSelector ) ) {\n\t\t\t\tsetFieldValue( field, '' );\n\t\t\t}\n\t\t}\n\t\t\n\t\t_updateCheckout = true;\n\t}\n\n\n\n\t/**\n\t * Handle change to selected address option\n\t */\n\tvar changeSelectedAddress = function ( target ) {\n\t\tvar addressBook = target.closest( _settings.addressBookSelector );\n\t\tchangeNewAddressFormVisibility( addressBook, target );\n\t\tchangeSameAsOptionSelectedState( addressBook, target );\n\t\tchangeAddressFormFields( addressBook, target );\n\t\tupdatePersistedAddress( addressBook, target );\n\t}\n\n\n\n\t/**\n\t * Handle change to persisted address fields\n\t */\n\tvar changePersistedAddressFields = function( e ) {\n\t\tconsole.log( 'passed 3' );\n\t\t// Bail if checkout update disabled\n\t\tif ( ! _updateCheckout ) return;\n\t\t\n\t\tvar target = e.target;\n\t\tvar addressBook = target.closest( _settings.addressBookSelector );\n\t\tvar selectedAddress = addressBook.querySelector( _settings.selectedAddressIdSelector );\n\n\t\tif ( selectedAddress.matches( _settings.addressEntryNewSelector ) ) {\n\t\t\tupdateAddressAttribute( addressBook, selectedAddress );\n\t\t\tupdatePersistedAddress( addressBook, selectedAddress );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Prepare selector of target field of \"copy to\" function based origin field attributes\n\t */\n\tvar prepareCopyValueToFieldsSelector = function() {\n\t\tvar copyFromFields = document.querySelectorAll( _settings.copyValueFromFieldSelector );\n\n\t\t\n\t\tfor ( var index = 0; index < copyFromFields.length; index++) {\n\t\t\tvar field = copyFromFields[ index ];\n\t\t\tvar copyToSelector = field.getAttribute( _settings.copyValueToAttribute );\n\t\t\t\n\t\t\tif ( _copyValueToFieldSelector.indexOf( copyToSelector ) == -1 ) {\n\t\t\t\t_copyValueToFieldSelector += _copyValueToFieldSelector.length > 0 ? ', ' : '';\n\t\t\t\t_copyValueToFieldSelector += copyToSelector;\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Copy value from one field to a target field defined as an attribute\n\t */\n\tvar copyFieldValue = function( changedField ) {\n\t\tvar copyToSelector = changedField.getAttribute( _settings.copyValueToAttribute );\n\t\t\n\t\t// Bail if selector to copy to other fields is empty\n\t\tif ( ! copyToSelector || copyToSelector == '' ) { return; }\n\n\t\tvar targetFields = document.querySelectorAll( copyToSelector );\n\n\t\tfor ( var index = 0; index < targetFields.length; index++ ) {\n\t\t\tvar field = targetFields[ index ];\n\t\t\tif ( ! field.matches( _settings.fieldEditedSelector ) ) {\n\t\t\t\tfield.value = changedField.value;\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Mark a field as edited by the user\n\t */\n\tvar markFieldAsEdited = function( field ) {\n\t\t// Bail if field not valid\n\t\tif ( ! field ) { return; }\n\n\t\tfield.setAttribute( _settings.fieldEditedAttribute, '1' );\n\t}\n\t\n\n\n\t/**\n\t * Handle captured `change` event and route to the appropriate function.\n\t */\n\tvar handleChange = function( e ) {\n\t\tif ( e.target.matches( _settings.addressEntrySelector ) ) {\n\t\t\tchangeSelectedAddress( e.target );\n\t\t}\n\t\telse if ( e.target.matches( _settings.copyValueFromFieldSelector ) ) {\n\t\t\tcopyFieldValue( e.target );\n\t\t}\n\t\telse if ( e.target.matches( _copyValueToFieldSelector ) ) {\n\t\t\tmarkFieldAsEdited( e.target );\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Handle change to persisted address fields\n\t */\n\tvar initEventHandlers = function( e ) {\n\t\twindow.addEventListener( 'change', handleChange );\n\n\t\t$( document.body ).on( 'updated_checkout', initAddressFieldsEventHandlers );\n\t\tinitAddressFieldsEventHandlers();\n\t}\n\t\n\t/**\n\t * Add event handler to persisted address fields\n\t */\n\tvar initAddressFieldsEventHandlers = function() {\n\t\tif ( _hasJQuery ) {\n\t\t\t// Need to use jQuery event handler as select2 doesn't fire change event for the underlying select field\n\t\t\tvar debouncedChangeHandler = debounce( changePersistedAddressFields, 500 );\n\t\t\t$( _settings.persistAddressFieldsSelector ).off( 'change', debouncedChangeHandler );\n\t\t\t$( _settings.persistAddressFieldsSelector ).on( 'change', debouncedChangeHandler );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Initialize component and set related handlers.\n\t */\n\t_publicMethods.init = function() {\n\t\tif ( _hasInitialized ) return;\n\t\t\n\t\tinitEventHandlers();\n\t\tprepareCopyValueToFieldsSelector();\n\n\t\t// Add init class\n\t\tdocument.body.classList.add( _settings.bodyClass );\n\n\t\t_hasInitialized = true;\n\t};\n\n\n\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","AddressBook","global","this","window","$","jQuery","_hasJQuery","_hasInitialized","_publicMethods","_settings","_updateCheckout","_copyValueToFieldSelector","getAddressDataFromAttribute","selectedAddress","addressDataString","getAttribute","JSON","parse","e","updateAddressAttribute","addressBook","addressData","addressType","fields","querySelectorAll","i","length","field","replace","value","getAddressDataFromFields","stringify","setAttribute","setFieldValue","undefined","matches","val","select2","trigger","CheckoutValidation","clearValidationResults","closest","updatePersistedAddress","ajax","type","url","wc_checkout_params","ajax_url","data","action","address_data","complete","response","document","body","dataType","changeSelectedAddress","target","newAddressForm","addressBookEntriesWrapper","querySelector","classList","add","remove","removeAttribute","clearAddressFields","fieldKeys","Object","keys","key","fieldkey","changeAddressFormFields","changePersistedAddressFields","console","log","handleChange","changedField","copyToSelector","targetFields","index","copyFieldValue","initAddressFieldsEventHandlers","debouncedChangeHandler","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","setTimeout","apply","off","on","init","addEventListener","copyFromFields","indexOf","prepareCopyValueToFieldsSelector"],"mappings":"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"}