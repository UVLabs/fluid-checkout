{"version":3,"names":[],"mappings":"","sources":["country-select-110-dev-115.js"],"sourcesContent":["/**\n * WooCommerce Fluid Checkout\n * \n * Country Select Script\n * \n * Replaces the original WooCommerce country-select.js file\n * to also target address fields without a prefix of type\n * `billing_` or `shipping_`.\n */\n\n/*global wc_country_select_params */\njQuery( function( $ ) {\n\n\t// wc_country_select_params is required to continue, ensure the object exists\n\tif ( typeof wc_country_select_params === 'undefined' ) {\n\t\treturn false;\n\t}\n\n\t// Select2 Enhancement if it exists\n\tif ( $().selectWoo ) {\n\t\tvar getEnhancedSelectFormatString = function() {\n\t\t\treturn {\n\t\t\t\t'language': {\n\t\t\t\t\terrorLoading: function() {\n\t\t\t\t\t\t// Workaround for https://github.com/select2/select2/issues/4355 instead of i18n_ajax_error.\n\t\t\t\t\t\treturn wc_country_select_params.i18n_searching;\n\t\t\t\t\t},\n\t\t\t\t\tinputTooLong: function( args ) {\n\t\t\t\t\t\tvar overChars = args.input.length - args.maximum;\n\n\t\t\t\t\t\tif ( 1 === overChars ) {\n\t\t\t\t\t\t\treturn wc_country_select_params.i18n_input_too_long_1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn wc_country_select_params.i18n_input_too_long_n.replace( '%qty%', overChars );\n\t\t\t\t\t},\n\t\t\t\t\tinputTooShort: function( args ) {\n\t\t\t\t\t\tvar remainingChars = args.minimum - args.input.length;\n\n\t\t\t\t\t\tif ( 1 === remainingChars ) {\n\t\t\t\t\t\t\treturn wc_country_select_params.i18n_input_too_short_1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn wc_country_select_params.i18n_input_too_short_n.replace( '%qty%', remainingChars );\n\t\t\t\t\t},\n\t\t\t\t\tloadingMore: function() {\n\t\t\t\t\t\treturn wc_country_select_params.i18n_load_more;\n\t\t\t\t\t},\n\t\t\t\t\tmaximumSelected: function( args ) {\n\t\t\t\t\t\tif ( args.maximum === 1 ) {\n\t\t\t\t\t\t\treturn wc_country_select_params.i18n_selection_too_long_1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn wc_country_select_params.i18n_selection_too_long_n.replace( '%qty%', args.maximum );\n\t\t\t\t\t},\n\t\t\t\t\tnoResults: function() {\n\t\t\t\t\t\treturn wc_country_select_params.i18n_no_matches;\n\t\t\t\t\t},\n\t\t\t\t\tsearching: function() {\n\t\t\t\t\t\treturn wc_country_select_params.i18n_searching;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\tvar wc_country_select_select2 = function() {\n\t\t\t$( 'select.country_select:visible, select.state_select:visible' ).each( function() {\n\t\t\t\tvar select2_args = $.extend({\n\t\t\t\t\tplaceholder: $( this ).attr( 'data-placeholder' ) || $( this ).attr( 'placeholder' ) || '',\n\t\t\t\t\twidth: '100%'\n\t\t\t\t}, getEnhancedSelectFormatString() );\n\n\t\t\t\t$( this )\n\t\t\t\t\t.on( 'select2:select', function() {\n\t\t\t\t\t\t$( this ).focus(); // Maintain focus after select https://github.com/select2/select2/issues/4384\n\t\t\t\t\t} )\n\t\t\t\t\t.selectWoo( select2_args );\n\t\t\t});\n\t\t};\n\n\t\twc_country_select_select2();\n\n\t\t$( document.body ).bind( 'country_to_state_changed', function() {\n\t\t\twc_country_select_select2();\n\t\t});\n\t}\n\n\t/* State/Country select boxes */\n\tvar states_json       = wc_country_select_params.countries.replace( /&quot;/g, '\"' ),\n\t\tstates            = $.parseJSON( states_json ),\n\t\twrapper_selectors = '.woocommerce-billing-fields,' +\n\t\t\t'.woocommerce-shipping-fields,' +\n\t\t\t'.woocommerce-address-fields,' +\n\t\t\t'.woocommerce-shipping-calculator';\n\n\t$( document.body ).on( 'change refresh', 'select.country_to_state, input.country_to_state', function() {\n\t\t// Grab wrapping element to target only stateboxes in same 'group'\n\t\tvar $wrapper = $( this ).closest( wrapper_selectors );\n\n\t\tif ( ! $wrapper.length ) {\n\t\t\t$wrapper = $( this ).closest('.form-row').parent();\n\t\t}\n\n        var country     = $( this ).val(),\n            // CHANGE: Add selector for address fields without prefix\n\t\t\t$statebox     = $wrapper.find( '#state, #billing_state, #shipping_state, #calc_shipping_state' ),\n\t\t\t$parent       = $statebox.closest( '.form-row' ),\n\t\t\tinput_name    = $statebox.attr( 'name' ),\n\t\t\tinput_id      = $statebox.attr('id'),\n\t\t\tinput_classes = $statebox.attr('data-input-classes'),\n\t\t\tvalue         = $statebox.val(),\n\t\t\tplaceholder   = $statebox.attr( 'placeholder' ) || $statebox.attr( 'data-placeholder' ) || '',\n\t\t\t$newstate;\n\n\t\tif ( states[ country ] ) {\n\t\t\tif ( $.isEmptyObject( states[ country ] ) ) {\n\t\t\t\t$newstate = $( '<input type=\"hidden\" />' )\n\t\t\t\t\t.prop( 'id', input_id )\n\t\t\t\t\t.prop( 'name', input_name )\n\t\t\t\t\t.prop( 'placeholder', placeholder )\n\t\t\t\t\t.attr( 'data-input-classes', input_classes )\n\t\t\t\t\t.addClass( 'hidden ' + input_classes );\n\t\t\t\t$parent.hide().find( '.select2-container' ).remove();\n\t\t\t\t$statebox.replaceWith( $newstate );\n\t\t\t\t$( document.body ).trigger( 'country_to_state_changed', [ country, $wrapper ] );\n\t\t\t} else {\n\t\t\t\tvar state          = states[ country ],\n\t\t\t\t\t$defaultOption = $( '<option value=\"\"></option>' ).text( wc_country_select_params.i18n_select_state_text );\n\n\t\t\t\tif ( ! placeholder ) {\n\t\t\t\t\tplaceholder = wc_country_select_params.i18n_select_state_text;\n\t\t\t\t}\n\n\t\t\t\t$parent.show();\n\n\t\t\t\tif ( $statebox.is( 'input' ) ) {\n\t\t\t\t\t$newstate = $( '<select></select>' )\n\t\t\t\t\t\t.prop( 'id', input_id )\n\t\t\t\t\t\t.prop( 'name', input_name )\n\t\t\t\t\t\t.data( 'placeholder', placeholder )\n\t\t\t\t\t\t.attr( 'data-input-classes', input_classes )\n\t\t\t\t\t\t.addClass( 'state_select ' + input_classes );\n                    $statebox.replaceWith( $newstate );\n                    // CHANGE: Add selector for address fields without prefix\n\t\t\t\t\t$statebox = $wrapper.find( '#state, #billing_state, #shipping_state, #calc_shipping_state' );\n\t\t\t\t}\n\n\t\t\t\t$statebox.empty().append( $defaultOption );\n\n\t\t\t\t$.each( state, function( index ) {\n\t\t\t\t\tvar $option = $( '<option></option>' )\n\t\t\t\t\t\t.prop( 'value', index )\n\t\t\t\t\t\t.text( state[ index ] );\n\t\t\t\t\t$statebox.append( $option );\n\t\t\t\t} );\n\n\t\t\t\t$statebox.val( value ).change();\n\n\t\t\t\t$( document.body ).trigger( 'country_to_state_changed', [country, $wrapper ] );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( $statebox.is( 'select, input[type=\"hidden\"]' ) ) {\n\t\t\t\t$newstate = $( '<input type=\"text\" />' )\n\t\t\t\t\t.prop( 'id', input_id )\n\t\t\t\t\t.prop( 'name', input_name )\n\t\t\t\t\t.prop('placeholder', placeholder)\n\t\t\t\t\t.attr('data-input-classes', input_classes )\n\t\t\t\t\t.addClass( 'input-text  ' + input_classes );\n\t\t\t\t$parent.show().find( '.select2-container' ).remove();\n\t\t\t\t$statebox.replaceWith( $newstate );\n\t\t\t\t$( document.body ).trigger( 'country_to_state_changed', [country, $wrapper ] );\n\t\t\t}\n\t\t}\n\n\t\t$( document.body ).trigger( 'country_to_state_changing', [country, $wrapper ] );\n\t});\n\n\t$( document.body ).on( 'wc_address_i18n_ready', function() {\n\t\t// Init country selects with their default value once the page loads.\n\t\t$( wrapper_selectors ).each( function() {\n            // CHANGE: Add selector for address fields without prefix\n\t\t\tvar $country_input = $( this ).find( '#country, #billing_country, #shipping_country, #calc_shipping_country' );\n\n\t\t\tif ( 0 === $country_input.length || 0 === $country_input.val().length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$country_input.trigger( 'refresh' );\n\t\t});\n\t});\n});\n"],"file":"../country-select-110-dev-115.min.js"}