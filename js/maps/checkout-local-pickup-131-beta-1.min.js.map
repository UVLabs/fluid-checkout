{"version":3,"file":"../checkout-local-pickup-131-beta-1.min.js","sources":["checkout-local-pickup.js"],"sourcesContent":["/**\n * Manage local pickup shipping methods.\n *\n * DEPENDS ON:\n * - jQuery // Interact with WooCommerce events\n */\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t\tdefine([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t\tmodule.exports = factory(root);\n\t} else {\n\t\troot.CheckoutLocalPickup = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar $ = jQuery;\n\tvar _hasJQuery = ( $ != null );\n\n\tvar _hasInitialized = false;\n\tvar _publicMethods = {};\n\tvar _settings = {\n\t\tbodyClass: 'has-fc-checkout-local-pickup',\n\n        shippingMethodPackageSelector: '.shipping-method__package',\n        chosenShippingMethodSelector: 'input.shipping_method:checked',\n        shippingAddressSubstepSelector: '.fc-step__substep[data-substep-id=\"shipping_address\"]',\n\n        substepEditableAttribute: 'data-substep-editable',\n        \n        localPickupIdPattern: 'local_pickup',\n\t}\n\n\n\n\t/**\n\t * METHODS\n\t */\n\n\n\n\t/*!\n\t* Merge two or more objects together.\n\t* (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\n\t* @param   {Boolean}  deep     If true, do a deep (or recursive) merge [optional]\n\t* @param   {Object}   objects  The objects to merge together\n\t* @returns {Object}            Merged values of defaults and options\n\t*/\n\tvar extend = function () {\n\t\t// Variables\n\t\tvar extended = {};\n\t\tvar deep = false;\n\t\tvar i = 0;\n\n\t\t// Check if a deep merge\n\t\tif ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\n\t\t\tdeep = arguments[0];\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge the object into the extended object\n\t\tvar merge = function (obj) {\n\t\t\tfor (var prop in obj) {\n\t\t\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\t\t\t// If property is an object, merge properties\n\t\t\t\t\tif (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n\t\t\t\t\t\textended[prop] = extend(extended[prop], obj[prop]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textended[prop] = obj[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop through each object and conduct a merge\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar obj = arguments[i];\n\t\t\tmerge(obj);\n\t\t}\n\n\t\treturn extended;\n    };\n\n\n\n\t/**\n\t * Maybe change visibility status of the shipping address edit buttons when shipping method is `local_pickup`.\n\t *\n\t * @param   Event  _event  An unused `jQuery.Event` object.\n\t * @param   Array  data   The updated checkout data.\n\t */\n\tvar maybeChangeShippingAddressEditButtonVisibility = function( _event, data ) {\n\t\tvar $packages = $( _settings.shippingMethodPackageSelector );\n\t\tif ( $packages.length ) {\n\t\t\t$packages.each( function() {\n\n\t\t\t\tvar $chosen_method = $( this ).find( _settings.chosenShippingMethodSelector );\n\t\t\t\tvar $shipping_address_substep = $( _settings.shippingAddressSubstepSelector );\n\t\t\t\tvar is_local_pickup = $chosen_method.val().startsWith( _settings.localPickupIdPattern );\n\t\t\t\t\n\t\t\t\t// TODO: Manage multiple shipping packages\n\t\t\t\tif( is_local_pickup ) {\n\t\t\t\t\t$shipping_address_substep.attr( _settings.substepEditableAttribute, 'no' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$shipping_address_substep.attr( _settings.substepEditableAttribute, 'yes' );\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Initialize component and set related handlers.\n\t */\n\t_publicMethods.init = function( options ) {\n\t\tif ( _hasInitialized ) return;\n\n\t\t// Merge settings\n\t\t_settings = extend( _settings, options );\n\n\t\t// Add jQuery event listeners\n\t\tif ( _hasJQuery ) {\n\t\t\t$( document.body ).on( 'updated_checkout', maybeChangeShippingAddressEditButtonVisibility );\n\t\t}\n\n\t\t// Add init class\n\t\tdocument.body.classList.add( _settings.bodyClass );\n\n\t\t_hasInitialized = true;\n\t};\n\n\n\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","CheckoutLocalPickup","global","this","window","maybeChangeShippingAddressEditButtonVisibility","_event","data","$packages","$","_settings","shippingMethodPackageSelector","length","each","$chosen_method","find","chosenShippingMethodSelector","$shipping_address_substep","shippingAddressSubstepSelector","val","startsWith","localPickupIdPattern","attr","substepEditableAttribute","jQuery","_hasJQuery","_hasInitialized","_publicMethods","bodyClass","extend","extended","deep","i","Object","prototype","toString","call","arguments","obj","prop","hasOwnProperty","merge","init","options","document","body","on","classList","add"],"mappings":"CAMA,SAAWA,EAAMC,GACO,mBAAXC,QAAyBA,OAAOC,IAC3CD,OAAO,GAAID,KACmB,iBAAZG,QAClBC,OAAOD,QAAUH,IAEjBD,EAAKM,oBAAsBL,IAN7B,CAQqB,oBAAXM,OAAyBA,OAASC,KAAKC,QAAUD,KAAKD,OAAQ,SAAUP,gBA+E5B,SAAjDU,EAA2DC,EAAQC,GACtE,IAAIC,EAAYC,EAAGC,EAAUC,+BACxBH,EAAUI,QACdJ,EAAUK,KAAM,WAEf,IAAIC,EAAiBL,EAAGN,MAAOY,KAAML,EAAUM,8BAC3CC,EAA4BR,EAAGC,EAAUQ,gCACvBJ,EAAeK,MAAMC,WAAYV,EAAUW,sBAIhEJ,EAA0BK,KAAMZ,EAAUa,yBAA0B,MAGpEN,EAA0BK,KAAMZ,EAAUa,yBAA0B,SAzFxE,IAAId,EAAIe,OACJC,EAAoB,MAALhB,EAEfiB,GAAkB,EAClBC,EAAiB,GACjBjB,EAAY,CACfkB,UAAW,+BAELjB,8BAA+B,4BAC/BK,6BAA8B,gCAC9BE,+BAAgC,wDAEhCK,yBAA0B,wBAE1BF,qBAAsB,gBAkBzBQ,EAAS,WAEZ,IAAIC,EAAW,GACXC,GAAO,EACPC,EAAI,EAGgD,qBAAnDC,OAAOC,UAAUC,SAASC,KAAMC,UAAU,MAC9CN,EAAOM,UAAU,GACjBL,KAkBD,KAAOA,EAAIK,UAAUzB,OAAQoB,KAdjB,SAAUM,GACrB,IAAK,IAAIC,KAAQD,EACZA,EAAIE,eAAeD,KAElBR,GAAsD,oBAA9CE,OAAOC,UAAUC,SAASC,KAAKE,EAAIC,IAC9CT,EAASS,GAAQV,EAAOC,EAASS,GAAOD,EAAIC,IAE5CT,EAASS,GAAQD,EAAIC,IASxBE,CADUJ,UAAUL,IAIrB,OAAOF,GA2DR,OAtBAH,EAAee,KAAO,SAAUC,GAC1BjB,IAGLhB,EAAYmB,EAAQnB,EAAWiC,GAG1BlB,GACJhB,EAAGmC,SAASC,MAAOC,GAAI,mBAAoBzC,GAI5CuC,SAASC,KAAKE,UAAUC,IAAKtC,EAAUkB,WAEvCF,GAAkB,IAQZC"}